import React, { useState } from 'react';
import './css/UploadForm.css';
import { toast } from 'react-toastify';
import axios from 'axios';
import { useNavigate } from "react-router-dom";

function UploadForm() {
    const [surname, setSurname] = useState('');
    const [file, setFile] = useState(null);
    const [fileLabel, setFileLabel] = useState('üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª');
    const navigate = useNavigate();

    const handleFileChange = (e) => {
        const selectedFile = e.target.files[0];
        if (selectedFile) {
            setFile(selectedFile);
            setFileLabel('‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω');
        } else {
            setFile(null);
            setFileLabel('üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª');
        }
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        if (!file || !surname) {
            toast('‚ö†Ô∏è –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!', {
                position: "top-center",
                autoClose: 1500,
                hideProgressBar: true,
                closeOnClick: true,
                pauseOnHover: true,
                draggable: true,
                progress: undefined,
            });
            return;
        }

        const formData = new FormData();
        formData.append('file', file);
        formData.append('surname', surname);

        try {
            const res = await axios.post('http://localhost:3000/upload/excel', formData, {
                headers: {
                    'Content-Type': 'multipart/form-data',
                },
            });

            // –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            toast('üéâ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç!', {
                position: "top-center",
                autoClose: 1500,
                hideProgressBar: true,
                closeOnClick: true,
                pauseOnHover: true,
                draggable: true,
                progress: undefined,
            });

            // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö
            navigate('/schedule-table', { state: { response: res.data, surname: surname } });

        } catch (err) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å —Å–µ—Ä–≤–µ—Ä–∞
            if (err.response && err.response.data && err.response.data.message) {
                toast(`‚ùå ${err.response.data.message}`, {
                    position: "top-center",
                    autoClose: 1500,
                    hideProgressBar: true,
                    closeOnClick: true,
                    pauseOnHover: true,
                    draggable: true,
                    progress: undefined,
                });
            } else {
                // –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞:", err);
                toast('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞', {
                    position: "top-center",
                    autoClose: 1500,
                    hideProgressBar: true,
                    closeOnClick: true,
                    pauseOnHover: true,
                    draggable: true,
                    progress: undefined,
                });
            }
        }
    };

    return (
        <div className="upload-form-container">
            <div className="heading-schedule">
                <h1>üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π</h1>
            </div>
            <form className="upload-form">
                <div className="form-item-surname">
                    <input
                        type="text"
                        name="surname"
                        id="surname"
                        placeholder="üìù –í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é"
                        onChange={(e) => setSurname(e.target.value)}
                    />
                </div>
                <div className="form-item-file">
                    <input
                        type="file"
                        name="file"
                        id="file"
                        placeholder="üìé –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª"
                        onChange={handleFileChange}
                    />
                    <label htmlFor="file">{fileLabel}</label>
                </div>
                <div className="submit-button">
                    <input type="submit" value="üöÄ –ì–æ—Ç–æ–≤–æ" onClick={handleSubmit} />
                </div>
            </form>
        </div>
    );
}

export default UploadForm;
